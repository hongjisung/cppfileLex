2, 1, Keyword, using
2, 7, Keyword, namespace
2, 17, Identifier, std
4, 1, Keyword, const
4, 7, Keyword, int
4, 11, Identifier, N
4, 13, Punctuation, =
4, 15, Literal, 5
4, 17, Punctuation, *
4, 19, Literal, 100
4, 23, Punctuation, +
4, 25, Literal, 10
6, 1, Keyword, int
6, 5, Identifier, n
6, 1, Keyword, int
6, 5, Identifier, n
6, 6, Punctuation, ,
6, 8, Identifier, m
7, 1, Keyword, int
7, 5, Identifier, arr
7, 8, Punctuation, [
7, 9, Identifier, N
7, 10, Punctuation, ]
7, 11, Punctuation, [
7, 12, Identifier, N
7, 13, Punctuation, ]
8, 1, Keyword, long
8, 6, Keyword, long
8, 11, Identifier, Sum
10, 1, Keyword, void
10, 6, Identifier, input
10, 11, Punctuation, (
10, 12, Punctuation, )
10, 14, Punctuation, {
11, 5, Identifier, cin
11, 9, Punctuation, >>
11, 12, Identifier, n
11, 14, Punctuation, >>
11, 17, Identifier, m
11, 18, Punctuation, ;
12, 5, Keyword, for
12, 9, Punctuation, (
12, 10, Keyword, int
12, 14, Identifier, i
12, 16, Punctuation, =
12, 18, Literal, 1
12, 19, Punctuation, ;
12, 21, Identifier, i
12, 23, Punctuation, <=
12, 26, Identifier, n
12, 27, Punctuation, ;
12, 29, Identifier, i
12, 30, Punctuation, ++
12, 32, Punctuation, )
13, 9, Keyword, for
13, 13, Punctuation, (
13, 14, Keyword, int
13, 18, Identifier, j
13, 20, Punctuation, =
13, 22, Literal, 1
13, 23, Punctuation, ;
13, 25, Identifier, j
13, 27, Punctuation, <=
13, 30, Identifier, m
13, 31, Punctuation, ;
13, 33, Identifier, j
13, 34, Punctuation, ++
13, 36, Punctuation, )
14, 13, Identifier, cin
14, 17, Punctuation, >>
14, 20, Identifier, arr
14, 23, Punctuation, [
14, 24, Identifier, i
14, 25, Punctuation, ]
14, 26, Punctuation, [
14, 27, Identifier, j
14, 28, Punctuation, ]
14, 29, Punctuation, ;
15, 5, Keyword, return
15, 11, Punctuation, ;
16, 1, Punctuation, }
18, 1, Keyword, void
18, 6, Identifier, check
18, 11, Punctuation, (
18, 12, Keyword, int
18, 16, Punctuation, &
18, 17, Identifier, i
18, 18, Punctuation, ,
18, 20, Keyword, int
18, 24, Punctuation, &
18, 25, Identifier, j
18, 26, Punctuation, )
18, 28, Punctuation, {
19, 5, Keyword, if
19, 8, Punctuation, (
19, 9, Identifier, max
19, 12, Punctuation, (
19, 13, Identifier, arr
19, 16, Punctuation, [
19, 17, Identifier, i
19, 19, Punctuation, -
19, 21, Literal, 1
19, 22, Punctuation, ]
19, 23, Punctuation, [
19, 24, Identifier, j
19, 25, Punctuation, ]
19, 26, Punctuation, ,
19, 28, Identifier, arr
19, 31, Punctuation, [
19, 32, Identifier, i
19, 33, Punctuation, ]
19, 34, Punctuation, [
19, 35, Identifier, j
19, 37, Punctuation, -
19, 39, Literal, 1
19, 40, Punctuation, ]
19, 41, Punctuation, )
19, 43, Punctuation, >=
19, 46, Identifier, arr
19, 49, Punctuation, [
19, 50, Identifier, i
19, 51, Punctuation, ]
19, 52, Punctuation, [
19, 53, Identifier, j
19, 54, Punctuation, ]
19, 55, Punctuation, )
19, 57, Punctuation, {
20, 9, Identifier, cout
20, 14, Punctuation, <<
20, 17, Punctuation, -
20, 18, Literal, 1
20, 20, Punctuation, <<
20, 23, Identifier, endl
20, 27, Punctuation, ;
21, 9, Identifier, exit
21, 13, Punctuation, (
21, 14, Literal, 0
21, 15, Punctuation, )
21, 17, Punctuation, ;
22, 5, Punctuation, }
23, 5, Keyword, return
23, 11, Punctuation, ;
24, 1, Punctuation, }
26, 1, Keyword, void
26, 6, Identifier, solve
26, 11, Punctuation, (
26, 12, Punctuation, )
26, 14, Punctuation, {
27, 5, Keyword, for
27, 9, Punctuation, (
27, 10, Keyword, int
27, 14, Identifier, i
27, 16, Punctuation, =
27, 18, Identifier, n
27, 19, Punctuation, ;
27, 21, Identifier, i
27, 23, Punctuation, >
27, 25, Literal, 0
27, 26, Punctuation, ;
27, 28, Identifier, i
27, 29, Punctuation, --
27, 31, Punctuation, )
28, 9, Keyword, for
28, 13, Punctuation, (
28, 14, Keyword, int
28, 18, Identifier, j
28, 20, Punctuation, =
28, 22, Identifier, n
28, 23, Punctuation, ;
28, 25, Identifier, j
28, 27, Punctuation, >
28, 29, Literal, 0
28, 30, Punctuation, ;
28, 32, Identifier, j
28, 33, Punctuation, --
28, 35, Punctuation, )
28, 37, Punctuation, {
29, 13, Keyword, if
29, 16, Punctuation, (
29, 17, Identifier, arr
29, 20, Punctuation, [
29, 21, Identifier, i
29, 22, Punctuation, ]
29, 23, Punctuation, [
29, 24, Identifier, j
29, 25, Punctuation, ]
29, 26, Punctuation, )
30, 17, Identifier, Sum
30, 21, Punctuation, +=
30, 24, Identifier, arr
30, 27, Punctuation, [
30, 28, Identifier, i
30, 29, Punctuation, ]
30, 30, Punctuation, [
30, 31, Identifier, j
30, 32, Punctuation, ]
30, 33, Punctuation, ;
31, 13, Keyword, else
31, 18, Punctuation, {
32, 17, Identifier, arr
32, 20, Punctuation, [
32, 21, Identifier, i
32, 22, Punctuation, ]
32, 23, Punctuation, [
32, 24, Identifier, j
32, 25, Punctuation, ]
32, 27, Punctuation, =
32, 29, Identifier, min
32, 32, Punctuation, (
32, 33, Identifier, arr
32, 36, Punctuation, [
32, 37, Identifier, i
32, 39, Punctuation, +
32, 41, Literal, 1
32, 42, Punctuation, ]
32, 43, Punctuation, [
32, 44, Identifier, j
32, 45, Punctuation, ]
32, 46, Punctuation, ,
32, 48, Identifier, arr
32, 51, Punctuation, [
32, 52, Identifier, i
32, 53, Punctuation, ]
32, 54, Punctuation, [
32, 55, Identifier, j
32, 57, Punctuation, +
32, 59, Literal, 1
32, 60, Punctuation, ]
32, 61, Punctuation, )
32, 63, Punctuation, -
32, 65, Literal, 1
32, 66, Punctuation, ;
33, 17, Identifier, Sum
33, 21, Punctuation, +=
33, 24, Identifier, arr
33, 27, Punctuation, [
33, 28, Identifier, i
33, 29, Punctuation, ]
33, 30, Punctuation, [
33, 31, Identifier, j
33, 32, Punctuation, ]
33, 33, Punctuation, ;
34, 13, Punctuation, }
35, 13, Identifier, check
35, 18, Punctuation, (
35, 19, Identifier, i
35, 20, Punctuation, ,
35, 22, Identifier, j
35, 23, Punctuation, )
35, 25, Punctuation, ;
36, 9, Punctuation, }
37, 5, Keyword, return
37, 11, Punctuation, ;
38, 1, Punctuation, }
40, 1, Keyword, int
40, 5, Identifier, main
40, 9, Punctuation, (
40, 10, Punctuation, )
40, 12, Punctuation, {
41, 5, Identifier, input
41, 10, Punctuation, (
41, 11, Punctuation, )
41, 13, Punctuation, ;
42, 5, Identifier, solve
42, 10, Punctuation, (
42, 11, Punctuation, )
42, 13, Punctuation, ;
43, 5, Identifier, cout
43, 10, Punctuation, <<
43, 13, Identifier, Sum
43, 17, Punctuation, <<
43, 20, Identifier, endl
43, 24, Punctuation, ;
44, 5, Keyword, return
44, 12, Literal, 0
44, 13, Punctuation, ;
45, 1, Punctuation, }
